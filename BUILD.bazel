# -*- python -*-

load(":expose_all_files.bzl", "expose_all_files")
load("@rules_python//python:defs.bzl", "py_runtime", "py_runtime_pair")

package(default_visibility = ["//visibility:public"])

py_runtime(
    name = "py_runtime",
    interpreter_path = "/usr/bin/python3",
    python_version = "PY3",
    visibility = ["//visibility:private"],
)

py_runtime_pair(
    name = "py_runtime_pair",
    py3_runtime = ":py_runtime",
    visibility = ["//visibility:private"],
)

toolchain(
    name = "py_toolchain",
    toolchain = ":py_runtime_pair",
    toolchain_type = "@rules_python//python:toolchain_type",
)

# Declared here to permit easier access to `cli` from external projects.
py_binary(
    name = "cli",
    srcs = ["//bazel_external_data:cli.py"],
    visibility = ["//visibility:public"],
    deps = [
        "//bazel_external_data:cli_base",
        "//bazel_external_data:core",
    ],
)

# Declared for archive stuff (should generally be internal).
py_binary(
    name = "extract_archive",
    srcs = ["extract_archive.py"],
)

exports_files(
    srcs = ["exec.sh"],
)

# Bazel does not let us glob into `test/**`, even though the workspaces are not
# a package of this workspace. The solution is to declare the lint tests
# externally.
expose_all_files(
    sub_packages = ["bazel_external_data"],
    # We do not care about `test` for direct consumption, so do not expose it.
)

# Linting is not done here to simplify test dependencies.
# See :test/BUILD.bazel for how it is done.
